/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Analizador.Analizador_Nivel;
import Analizador.Analizador_Piezas;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;

/**
 *
 * @author Alex
 */
public class Inicio extends javax.swing.JFrame {

    private String[] cadenalvl;
    private String[] cadenapzs;
    private Analizador.Analizador_Nivel AnalizadorLVL = new Analizador_Nivel();
    private Analizador.Analizador_Piezas AnalizadorPZS = new Analizador_Piezas();

    public Inicio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextNiveles = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        TextPiezas = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        TextNiveles.setColumns(20);
        TextNiveles.setRows(5);
        jScrollPane1.setViewportView(TextNiveles);

        TextPiezas.setColumns(20);
        TextPiezas.setRows(5);
        jScrollPane2.setViewportView(TextPiezas);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Niveles");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Piezas");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton1.setText("Rotar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Bajar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("<--");

        jButton4.setText("-->");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(146, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel2)
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Cargar Niveles");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem4.setText("Cargar Piezas");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Salir");
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Juego");

        jMenuItem2.setText("Analizar lvl.");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem6.setText("Analiza Pz.");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Iniciar");
        jMenu2.add(jMenuItem7);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ayuda");

        jMenuItem8.setText("Acerca De");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuItem3.setText("Manual");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem9.setText("Reportes");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        JOptionPane.showMessageDialog(null, "Nombre: Rodolfo Alexander Avalos Soto \n Carnet: 201801210", "Informacion Estudiante", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JFileChooser file = new JFileChooser("../Documents/");
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileFilter filtro = new FileNameExtensionFilter("Archivos TRS (*.trs)", "TRS");
        file.setFileFilter(filtro);
        file.showOpenDialog(this);
        File archivo = file.getSelectedFile();
        if (archivo != null) {
            try {
                FileReader archivos = new FileReader(archivo);
                BufferedReader contenido = new BufferedReader(archivos);
                String texto;
                while ((texto = contenido.readLine()) != null) {
                    TextNiveles.append(texto + '\n');
                }
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Error al Cargar");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error al Cargar");
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        JFileChooser file = new JFileChooser("../Documents/");
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileFilter filtro = new FileNameExtensionFilter("Archivos PZS (*.pzs)", "PZS");
        file.setFileFilter(filtro);
        file.showOpenDialog(this);
        File archivo = file.getSelectedFile();
        if (archivo != null) {
            try {
                FileReader archivos = new FileReader(archivo);
                BufferedReader contenido = new BufferedReader(archivos);
                String texto;
                while ((texto = contenido.readLine()) != null) {
                    TextPiezas.append(texto + '\n');
                }
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Error al Cargar");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error al Cargar");
            }
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        File archivo = new File("prueba.txt");
        try {
            Desktop.getDesktop().open(archivo);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error al Abrir");
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        int linea = TextNiveles.getLineCount();
        cadenalvl = new String[linea];
        int inicio = 0;
        int fin = 0;
        for (int i = 0; i < linea; i++) {
            try {
                inicio = TextNiveles.getLineStartOffset(i);
                fin = TextNiveles.getLineEndOffset(i);
            } catch (BadLocationException ex) {
                Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                cadenalvl[i] = TextNiveles.getText(inicio, fin - inicio);
            } catch (BadLocationException ex) {
                Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        for (int pos = 0; pos < cadenalvl.length; pos++) {
            AnalizadorLVL.analizadorNivel(cadenalvl[pos], pos);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        int linea = TextPiezas.getLineCount();
        cadenapzs = new String[linea];
        int inicio = 0;
        int fin = 0;
        for (int i = 0; i < linea; i++) {
            try {
                inicio = TextPiezas.getLineStartOffset(i);
                fin = TextPiezas.getLineEndOffset(i);
            } catch (BadLocationException ex) {
                Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                cadenapzs[i] = TextPiezas.getText(inicio, fin - inicio);
            } catch (BadLocationException ex) {
                Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        for (int pos = 0; pos < cadenapzs.length; pos++) {
            AnalizadorPZS.analizadorPieza(cadenapzs[pos], pos);
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        try {
            reporteTokenNivel();
            reporteTokenPieza();
            reporteTokenErrorNivel();
            reporteTokenErrorPieza();
        } catch (IOException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        for (int i = 0; i < AnalizadorLVL.lst_nivel.size(); i++) {
            System.out.println(AnalizadorLVL.lst_nivel.get(i).getTablero() + '\n');
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           for (int i = 0; i < AnalizadorPZS.lst_piezas.size(); i++) {
            System.out.println(AnalizadorPZS.lst_piezas.get(i).getFigura());
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    private void reporteTokenNivel() throws IOException {
        PrintWriter sw = new PrintWriter(new FileWriter("Reporte_Token_Nivel.html"));
        sw.print("<HTML>");
        sw.println("<HEAD>");
        sw.println("</HEAD>");
        sw.println("<BODY>");
        sw.println("<Center><table border=\"2\"  border-collapse= \" collapse \" ></Center>");
        sw.println("<Center><TH COLSPAN = 5 > Tabla Tokens Nivel</TH></Center>");
        sw.println("<tr>");
        sw.println("<th > Numero </th> ");
        sw.println("<th> Lexema </th> ");
        sw.println("<th> Lexico </th> ");
        sw.println("<th> Fila </th> ");
        sw.println("<th> Columna </th> ");
        sw.println("</tr>");
        for (int i = 0; i < AnalizadorLVL.lst_token.size(); i++) {
            sw.println("<tr>");
            sw.println("<td>" + i + " </td> ");
            sw.println("<td> " + AnalizadorLVL.lst_token.get(i).lexema + " </td> ");
            sw.println("<td> " + AnalizadorLVL.lst_token.get(i).lexico + " </td> ");
            sw.println("<td> " + AnalizadorLVL.lst_token.get(i).Fila + " </td> ");
            sw.println("<td> " + AnalizadorLVL.lst_token.get(i).Columna + " </td> ");
            sw.println("</tr>");
        }
        sw.println("</table>");
        sw.println("</BODY>");
        sw.println("</HTML>");
        sw.close();
    }

    private void reporteTokenErrorNivel() throws IOException {
        PrintWriter sw = new PrintWriter(new FileWriter("Reporte_Token_Nivel.html"));
        sw.print("<HTML>");
        sw.println("<HEAD>");
        sw.println("</HEAD>");
        sw.println("<BODY>");
        sw.println("<Center><table border=\"2\"  border-collapse= \" collapse \" ></Center>");
        sw.println("<Center><TH COLSPAN = 5 > Tabla Tokens Nivel</TH></Center>");
        sw.println("<tr>");
        sw.println("<th > Numero </th> ");
        sw.println("<th> Caracter </th> ");
        sw.println("<th> Descripcion </th> ");
        sw.println("<th> Fila </th> ");
        sw.println("<th> Columna </th> ");
        sw.println("</tr>");
        for (int i = 0; i < AnalizadorLVL.lst_error.size(); i++) {
            sw.println("<tr>");
            sw.println("<td>" + i + " </td> ");
            sw.println("<td> " + AnalizadorLVL.lst_error.get(i).Caracter + " </td> ");
            sw.println("<td> " + AnalizadorLVL.lst_error.get(i).Descripcion + " </td> ");
            sw.println("<td> " + AnalizadorLVL.lst_error.get(i).fila + " </td> ");
            sw.println("<td> " + AnalizadorLVL.lst_error.get(i).columna + " </td> ");
            sw.println("</tr>");
        }
        sw.println("</table>");
        sw.println("</BODY>");
        sw.println("</HTML>");
        sw.close();
    }

    private void reporteTokenPieza() throws IOException {
        PrintWriter sw = new PrintWriter(new FileWriter("Reporte_Token_Piezas.html"));
        sw.print("<HTML>");
        sw.println("<HEAD>");
        sw.println("</HEAD>");
        sw.println("<BODY>");
        sw.println("<Center><table border=\"2\"  border-collapse= \" collapse \" ></Center>");
        sw.println("<Center><TH COLSPAN = 5 > Tabla Tokens Piezas</TH></Center>");
        sw.println("<tr ALIGN=center>");
        sw.println("<th > Numero </th> ");
        sw.println("<th> Lexema </th> ");
        sw.println("<th> Lexico </th> ");
        sw.println("<th> Fila </th> ");
        sw.println("<th> Columna </th> ");
        sw.println("</tr>");
        for (int i = 0; i < AnalizadorPZS.lst_token.size(); i++) {
            sw.println("<tr ALIGN=center >");
            sw.println("<td>" + i + " </td> ");
            sw.println("<td> " + AnalizadorPZS.lst_token.get(i).lexema + " </td> ");
            sw.println("<td> " + AnalizadorPZS.lst_token.get(i).lexico + " </td> ");
            sw.println("<td> " + AnalizadorPZS.lst_token.get(i).Fila + " </td> ");
            sw.println("<td> " + AnalizadorPZS.lst_token.get(i).Columna + " </td> ");
            sw.println("</tr>");
        }
        sw.println("</table>");
        sw.println("</BODY>");
        sw.println("</HTML>");
        sw.close();
    }

    private void reporteTokenErrorPieza() throws IOException {
        PrintWriter sw = new PrintWriter(new FileWriter("Reporte_Token_Nivel.html"));
        sw.print("<HTML>");
        sw.println("<HEAD>");
        sw.println("</HEAD>");
        sw.println("<BODY>");
        sw.println("<Center><table border=\"2\"  border-collapse= \" collapse \" ></Center>");
        sw.println("<Center><TH COLSPAN = 5 > Tabla Tokens Nivel</TH></Center>");
        sw.println("<tr>");
        sw.println("<th > Numero </th> ");
        sw.println("<th> Caracter </th> ");
        sw.println("<th> Descripcion </th> ");
        sw.println("<th> Fila </th> ");
        sw.println("<th> Columna </th> ");
        sw.println("</tr>");
        for (int i = 0; i < AnalizadorPZS.lst_error.size(); i++) {
            sw.println("<tr>");
            sw.println("<td>" + i + " </td> ");
            sw.println("<td> " + AnalizadorPZS.lst_error.get(i).Caracter + " </td> ");
            sw.println("<td> " + AnalizadorPZS.lst_error.get(i).Descripcion + " </td> ");
            sw.println("<td> " + AnalizadorPZS.lst_error.get(i).fila + " </td> ");
            sw.println("<td> " + AnalizadorPZS.lst_error.get(i).columna + " </td> ");
            sw.println("</tr>");
        }
        sw.println("</table>");
        sw.println("</BODY>");
        sw.println("</HTML>");
        sw.close();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TextNiveles;
    private javax.swing.JTextArea TextPiezas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
